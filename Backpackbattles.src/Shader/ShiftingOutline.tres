[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform sampler2D gradient;
uniform float speed : hint_range(0.1,10,0.01) = 1.0;
uniform float frequency : hint_range(0,100,0.01) = 1.0;
uniform float threshold : hint_range(0, 1, 0.01) = 0.3;
uniform float fade : hint_range(0, 4, 0.01) = 2;

const vec4 brown = vec4(0.24, 0.15, 0.11, 1);

void fragment(){
	COLOR = texture(TEXTURE, UV);
	if (COLOR.r < threshold) {
		float ONE = 1.0;
		float offset = modf(UV.y * frequency + TIME * speed, ONE);
		float f = clamp((threshold - COLOR.r) *fade, 0 , 1);
		//f = 1.0;
		vec3 gradientS = texture(gradient, vec2(offset)).rgb;
		//COLOR.rgb = gradientS * 1.6 * f;
		
		COLOR.rgb = mix(brown.rgb, gradientS * 1.6, f);
		
	}
	else
		COLOR = vec4(0.24, 0.15, 0.11, COLOR.a * 0.9);
}"
