[gd_scene load_steps=14 format=2]

[ext_resource path="res://Items/Item.tscn" type="PackedScene" id=1]
[ext_resource path="res://Items/Sprites/DeckofCards.png" type="Texture" id=2]
[ext_resource path="res://Items/DeckofCards.gd" type="Script" id=3]
[ext_resource path="res://Assets/Noise/SparkleNoise.png" type="Texture" id=4]
[ext_resource path="res://Items/Animations/CardConnector.tscn" type="PackedScene" id=5]

[sub_resource type="PhysicsMaterial" id=1]
resource_local_to_scene = true
friction = 0.73
bounce = 0.7

[sub_resource type="Shader" id=10]
code = "shader_type canvas_item;

uniform float progress : hint_range(-1, 2) = 0.5;
uniform vec2 direction = vec2(0, 1);

void fragment() {
	COLOR = texture(TEXTURE, UV);
	COLOR.rgb *= 1.0 + 0.5 * smoothstep(progress - 0.05, progress + 0.05, dot(UV, direction));
}"

[sub_resource type="ShaderMaterial" id=11]
resource_local_to_scene = true
shader = SubResource( 10 )
shader_param/progress = 0.245
shader_param/direction = Vector2( -1, 0 )

[sub_resource type="RectangleShape2D" id=12]
extents = Vector2( 36, 61.5 )

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform float wobbliness : hint_range(0, 5) = 0.5;

uniform sampler2D gradient;

uniform sampler2D NOISE_PATTERN;
uniform sampler2D NOISE_PATTERN2;

uniform vec2 scroll1 = vec2(1 , 0.4);
uniform vec2 scroll2 = vec2(0.2, 1.2);

uniform float noise1Scale : hint_range(0.0, 10.0) = 1.0;
uniform float noise2Scale : hint_range(0.0, 10.0) = 1.0;

// MODULATE.a - revealFactor
// MODULATE.r - high modulate
// MODULATE.g - time offset

void fragment() {
	float adjustedTime = TIME * MODULATE.g;
	float intensity1 = texture(NOISE_PATTERN, UV * noise1Scale + adjustedTime * scroll1).r;
	float intensity2 = texture(NOISE_PATTERN2, UV * noise2Scale + adjustedTime * scroll2).r;
	float intensity = (intensity1 * intensity2);
	float texAlpha = texture(TEXTURE, UV).a;
	COLOR = texture(gradient, vec2(intensity * texAlpha * wobbliness * MODULATE.a));
	COLOR.rgb *= MODULATE.r;
}"

[sub_resource type="Gradient" id=16]
offsets = PoolRealArray( 0, 0.0362903, 0.173387, 0.883065, 1 )
colors = PoolColorArray( 0, 0.145098, 0.47451, 0, 0.0493469, 0.310691, 0.902344, 0.780392, 0.259254, 0.43121, 0.550781, 1, 0.688213, 0.891253, 0.970703, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 16 )
width = 100

[sub_resource type="ShaderMaterial" id=14]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/wobbliness = 3.5
shader_param/scroll1 = Vector2( 0.0033, 0.2253 )
shader_param/scroll2 = Vector2( -0.0117, 0.3423 )
shader_param/noise1Scale = 0.505
shader_param/noise2Scale = 0.733
shader_param/gradient = SubResource( 8 )
shader_param/NOISE_PATTERN = ExtResource( 4 )
shader_param/NOISE_PATTERN2 = ExtResource( 4 )

[node name="Deck of Cards" instance=ExtResource( 1 )]
physics_material_override = SubResource( 1 )
script = ExtResource( 3 )

[node name="CollisionMap" parent="." index="0"]
position = Vector2( 40, 0 )
tile_data = PoolIntArray( -65537, 4, 0, -1, 3, 0, 65535, 3, 0 )

[node name="Icon" parent="." index="1"]
material = SubResource( 11 )
position = Vector2( -1.75, -1.43696 )
scale = Vector2( 0.45, 0.45 )
texture = ExtResource( 2 )

[node name="Sockets" parent="Icon" index="0"]
scale = Vector2( 2.22222, 2.22222 )

[node name="CollisionPolygon2D" parent="ClickArea" index="0"]
polygon = PoolVector2Array( -40, -80, 40, -80, 40, 80, -40, 80 )

[node name="BottomCenter" parent="." index="3"]
position = Vector2( 0, 58 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="." index="7"]
visible = false
position = Vector2( -2, -0.5 )
shape = SubResource( 12 )

[node name="Connector" parent="." index="8" instance=ExtResource( 5 )]
material = SubResource( 14 )
