[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://Assets/Noise/SparkleNoise.png" type="Texture" id=1]

[sub_resource type="Shader" id=16]
code = "shader_type canvas_item;

uniform sampler2D tone_mapping;

uniform sampler2D NOISE_PATTERN;
uniform sampler2D NOISE_PATTERN2;
uniform vec2 scroll1 = vec2(1 , 0.4);
uniform vec2 scroll2 = vec2(0.2, 1.2);

uniform float baseIntensity : hint_range(-1.0,0.5) = 0.1;
uniform float intensityFactor : hint_range(0.0,5.0) = 1.5;

uniform vec2 noise1Scale = vec2(1,1);
uniform vec2 noise2Scale = vec2(1,1);
uniform float blur : hint_range(0.0, 7.0) = 3.0;

uniform float staticFactor : hint_range(-1,1) = 0.5;

uniform float zoomLevel : hint_range(0.0, 10.0) = 1.;
uniform vec2 cen = vec2(0.5);

vec2 polar_coordinates(vec2 uv, vec2 center, float zoom, float repeat)
{
	vec2 dir = uv - center;
	float radius = length(dir) * 2.0;
	float angle = atan(dir.y, dir.x) * 1.0/(3.1416 * 2.0);
	return mod(vec2(radius * zoom, angle * repeat), 1.0);
}

void fragment() {
	vec2 polar_uv = polar_coordinates(UV.xy, cen, zoomLevel, 1.0);

	vec4 texVal = textureLod(TEXTURE, UV, blur);
	float texAlpha = texVal.a;
	
	float intensity1 = textureLod(NOISE_PATTERN, polar_uv * noise1Scale + TIME * scroll1, 0.0).r;
	float intensity2 = textureLod(NOISE_PATTERN2, polar_uv * noise2Scale + TIME * scroll2, 0.0).r;
	float intensity= ((intensity1 * intensity2) + baseIntensity+ texVal.r * staticFactor) * intensityFactor * texAlpha;
	
	COLOR = textureLod(tone_mapping, vec2(intensity), 0.0);
}"

[sub_resource type="Gradient" id=18]
offsets = PoolRealArray( 0, 0.193548, 1 )
colors = PoolColorArray( 1, 0.87451, 0.568627, 0, 1, 0.80989, 0.242188, 0.311258, 1, 0.989223, 0.804688, 1 )

[sub_resource type="GradientTexture" id=19]
gradient = SubResource( 18 )
width = 200

[resource]
resource_local_to_scene = true
shader = SubResource( 16 )
shader_param/scroll1 = Vector2( -0.152, -0.031 )
shader_param/scroll2 = Vector2( -0.243, 0.086 )
shader_param/baseIntensity = 0.332
shader_param/intensityFactor = 1.168
shader_param/noise1Scale = Vector2( 1.134, 1 )
shader_param/noise2Scale = Vector2( 0.938, 2 )
shader_param/blur = 0.0
shader_param/staticFactor = -0.086
shader_param/zoomLevel = 1.0
shader_param/cen = Vector2( 0.5, 0.5 )
shader_param/tone_mapping = SubResource( 19 )
shader_param/NOISE_PATTERN = ExtResource( 1 )
shader_param/NOISE_PATTERN2 = ExtResource( 1 )
