[gd_scene load_steps=10 format=2]

[ext_resource path="res://Assets/NormalMap_Circle_Soft.png" type="Texture" id=1]
[ext_resource path="res://Assets/FoxArcher.png" type="Texture" id=2]
[ext_resource path="res://Items/Animations/CircularShine_Catalyst.material" type="Material" id=3]
[ext_resource path="res://Utility/PooledScene.gd" type="Script" id=4]
[ext_resource path="res://Assets/Light/RingLight.png" type="Texture" id=6]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float refractionMagnitude = 3.0;
const vec2 refrectionVec =  vec2(-1.0, 1.0);
void fragment() {
	
	// Possibly a more acturate way to do refraction? Uncomment and see how you like it (and comment out below refraction)
	//vec2 refraction = -refract(vec3(0,0,-1), texture(TEXTURE, UV).rgb, 1.1).xy;
	//vec3 refraction = -refract(vec3(2,2,1), texture(TEXTURE, UV).rgb, 1.1);
	vec4 textureRead = texture(TEXTURE, UV);
	
	vec2 refraction = (textureRead.xy - 0.5) * refrectionVec;
	//float i= (COLOR.r + COLOR.g + COLOR.b)*3.0;
	vec4 offsetScreenRead = texture(SCREEN_TEXTURE, SCREEN_UV 
		+ refraction * refractionMagnitude * textureRead.a);
	
	COLOR = offsetScreenRead;
	
	
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/refractionMagnitude = 0.00727934

[sub_resource type="Animation" id=4]
resource_name = "Shockwave"
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:material:shader_param/refractionMagnitude")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.173552, 0.240325 ),
"transitions": PoolRealArray( 0.5, 0.594604, 1 ),
"update": 0,
"values": [ 0.0, 0.017, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.294449 ),
"transitions": PoolRealArray( 0.732043, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 1.3, 1.3 ) ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.3 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "returnToObjectPool"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite/Light:material:shader_param/intensityFactor")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.0929812, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 1.168, 0.0 ]
}

[sub_resource type="Animation" id=20]
resource_name = "Suck"
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:material:shader_param/refractionMagnitude")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.0596745, 0.161142, 0.3 ),
"transitions": PoolRealArray( 1, 0.594604, 1 ),
"update": 0,
"values": [ 0.0, 0.008, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.00555116, 0.3 ),
"transitions": PoolRealArray( 1, 0.732043 ),
"update": 0,
"values": [ Vector2( 1.3, 1.3 ), Vector2( 0, 0 ) ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.3 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "returnToObjectPool"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite/Light:material:shader_param/intensityFactor")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.207019, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 1.168, 0.0 ]
}

[node name="Node2D" type="Node2D"]
z_index = -1
script = ExtResource( 4 )

[node name="FoxArcher" type="Sprite" parent="."]
visible = false
position = Vector2( 7, -15 )
texture = ExtResource( 2 )

[node name="BackBufferCopy" type="BackBufferCopy" parent="."]
copy_mode = 2

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 2 )
scale = Vector2( 1.02497, 1.02497 )
texture = ExtResource( 1 )

[node name="Light" type="Sprite" parent="Sprite"]
modulate = Color( 1.2, 1.2, 1.2, 1 )
self_modulate = Color( 1, 1, 1, 0.82 )
material = ExtResource( 3 )
scale = Vector2( 3, 3 )
z_index = -2
texture = ExtResource( 6 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Shockwave = SubResource( 4 )
anims/Suck = SubResource( 20 )
